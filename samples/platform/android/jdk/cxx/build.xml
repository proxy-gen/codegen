<?xml version="1.0" encoding="UTF-8"?>
<project name="android.cxx" basedir="." default="help">

    <!--                                                                    -->
    <!--                        Properties                                  -->
    <!--                                                                    -->

    <property environment="env" />
    <property file="local.properties" />
    <property file="ant.properties" />
    <property file="project.properties" />

    <property name="deploy.platform" value="android" />
    <property name="generator.path" value="${env.PATH}:.:${sdk.dir}/platform-tools" />

    <fail unless="sdk.dir" message="sdk.dir is missing. Run './setup.py -s /path/to/sdk -n /path/to/ndk' to generate local.properties."/>
    <fail unless="ndk.dir" message="ndk.dir is missing. Run './setup.py -s /path/to/sdk -n /path/to/ndk' to generate local.properties."/>

    <!--                                                                    -->
    <!--                        Private Targets                             -->
    <!--                                                                    -->

    <target name="debug" description="Builds cxx projects for debug">
        <property name="build.target" value="debug" />
        <antcall target="-generate.cxx.projects" />
        <antcall target="-build.cxx.projects" />
        <antcall target="-build.java.projects" />
    </target>
    
    <target name="release" description="Builds cxx projects for release">
        <property name="build.target" value="release" />
        <antcall target="-generate.cxx.projects" />
        <antcall target="-build.cxx.projects" />
        <antcall target="-build.java.projects" />
    </target>

    <target name="clean" depends="-clean.cxx.projects" description="Clean cxx projects">
        <delete includeemptydirs="true" failonerror="false">
          <fileset dir="." includes="libs/**"/>
        </delete>
    </target>
    
    <target name="help" description="Displays ant -projecthelp">
        <exec executable="ant" failonerror="true" failifexecutionfails="true">
            <arg value="-projecthelp"/>
        </exec>
    </target>

    <!--                                                                    -->
    <!--                        Private Targets                             -->
    <!--                                                                    -->

    <target name="-call.project">
        <antcall target="${call.target}">
            <param name="package.name" value="JDKCXX"/>
        </antcall>
        <!-- Add other projects here -->
    </target>


    <target name="-setup.cxx.project.call">
        <property name="cxx.path.to.project.dir" value="./generated/project/${package.name}" />
        <available file="${cxx.path.to.project.dir}" property="cxx.path.to.project.dir.present" />
        <property name="cxx.path.to.config.dir" value="./generated/config" />
        <property name="cxx.path.to.generated.dir" value="./generated" />
        <property name="cxx.path.to.generated.internal.dir" value="./generated/project/${package.name}"/>
        <property name="cxx.path.to.generated.exported.dir" value="./generated/project/exported/cxx/${package.name}"/>
    </target>

    <target name="-setup.java.project.call">
        <property name="java.path.to.project.dir" value="./generated/project/${package.name}" />
        <available file="${java.path.to.project.dir}" property="java.path.to.project.dir.present" />
        <antcall target="-setup.java.copy.dependent.libs" />
    </target>

    <target name="-setup.java.copy.dependent.libs">
        <antcall target="-setup.java.copy.dependent.libs.0" />
        <!-- add more dependent libs targets here -->
    </target>

    <target name="-setup.java.copy.dependent.libs.0" if="dependent.libs.source.0">
        <copy file="${dependent.libs.source.0}" tofile="${java.path.to.project.dir}/libs/${dependent.libs.target.0}" />
    </target>

    <!--                        Clean                                       -->

    <target name="-clean.cxx.projects">
        <antcall target="-call.project">
            <param name="call.target" value="-clean.cxx.project"/>
        </antcall>
    </target>

    <target name="-clean.cxx.project" depends="-setup.cxx.project.call" if="cxx.path.to.project.dir.present"> 
        <delete dir="${cxx.path.to.generated.dir}" verbose="true" failonerror="true" />
    </target>

    <!--                        Build                                       -->

    <target name="-build.cxx.projects">
        <antcall target="-call.project">
            <param name="call.target" value="-build.cxx.project"/>
        </antcall>
    </target>

    <target name="-build.cxx.project" depends="-setup.cxx.project.call">   
        <condition property="ndk.debug" value="1" else="0">
            <equals arg1="${build.target}" arg2="debug" casesensitive="false"/>
        </condition>
        <exec executable="${ndk.dir}/ndk-build" dir="${cxx.path.to.generated.internal.dir}" failonerror="true" failifexecutionfails="true">
            <arg value="NDK_DEBUG=${ndk.debug}" />
        </exec> 
    </target>

    <target name="-build.java.projects">
        <antcall target="-call.project">
            <param name="call.target" value="-build.java.project"/>
        </antcall>
    </target>

    <target name="-build.java.project" depends="-setup.java.project.call">
        <condition property="ant.target" value="debug" else="release">
            <equals arg1="${build.target}" arg2="debug" casesensitive="false"/>
        </condition>    
        <ant dir="${java.path.to.project.dir}" antfile="build.xml" target="${ant.target}" />    
    </target>

    <!--                        Generate                                    -->

    <target name="-generate.cxx.projects">
        <antcall target="-call.project">
            <param name="call.target" value="-generate.cxx.project"/>
        </antcall>
    </target>

    <target name="-generate.cxx.project" depends="-setup.cxx.project.call">
        <!-- generate.py will mkdirs in cxx.path.to.generated.dir -->
        <exec executable="generate.sh" dir="${basedir}" failonerror="true" failifexecutionfails="true" searchpath="true" resolveexecutable="true">
            <arg line="-s ${sdk.dir}" />
            <arg line="-n ${ndk.dir}" />
            <env key="PATH" path="${generator.path}" />
        </exec>
    </target>
    
</project>
